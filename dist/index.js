(()=>{"use strict";var e={653:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ComponentBase=void 0;class n extends HTMLElement{constructor(){super();const e=this.attachShadow({mode:"open"}),t=document.createElement("style");t.textContent=this.getStyle(),e.innerHTML=this.renderHTML(),e.appendChild(t)}getStyle(){return""}renderHTML(){return""}}t.ComponentBase=n},519:(e,t,n)=>{const o=n(522);n(541),customElements.define("custom-select-view",o.CustomSelectView),customElements.define("type-select-view",o.TypeSelectView)},522:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TypeSelectView=t.CustomSelectView=void 0;class n extends HTMLElement{constructor(){super(),this.internalOptions=[];const e=this.attachShadow({mode:"open"}),t=document.createElement("style");"dark"===this.getAttribute("theme")?t.textContent="\n                button {\n                text-align: start;\n                background-color: #222222;\n                border: none;\n                padding: 8px 8px;\n                color: white;\n                }\n                button:hover {\n                background-color: #333333;\n                }\n                button.selected {\n                background-color: #0077FF;\n                color: white;\n                }\n                .d-none { display: none; }\n                .d-block { display: block;}\n                .d-flex { display: flex; flex-direction: column;}\n                }\n           ":t.textContent="\nbutton {\ntext-align: start;\nbackground-color: #FFFFFF;\nborder: none;\npadding: 8px 8px;\ncolor: black;\n}\nbutton:hover {\nbackground-color: #F0F0F0;\n}\nbutton.selected {\nbackground-color: #0077FF;\ncolor: white;\n}\n.d-none { display: none; }\n.d-block { display: block;}\n.d-flex { display: flex; flex-direction: column;}\n}\n",e.innerHTML='<div><div id="options-list" style="display: flex; flex-direction: column;"></div></div>',e.appendChild(t)}static get observedAttributes(){return["selectedoptionindex","theme"]}set options(e){this.internalOptions=e;const t=this.shadowRoot.getElementById("options-list");t.innerText="";for(const n of e){const e=document.createElement("button");e.setAttribute("value",n.value),e.innerText=n.label,e.addEventListener("click",(()=>{this.dispatchEvent(new CustomEvent("option-select",{detail:{value:n.value}}))})),t.appendChild(e)}}get options(){return this.internalOptions}attributeChangedCallback(e,t,n){if("selectedoptionindex"===e){const e=parseInt(n);if(e<0)return;for(const e of this.shadowRoot.getElementById("options-list").getElementsByTagName("button"))e.className="";this.shadowRoot.getElementById("options-list").getElementsByTagName("button").length>e&&(this.shadowRoot.getElementById("options-list").getElementsByTagName("button")[e].className="selected")}}}t.CustomSelectView=n;class o extends HTMLElement{constructor(){super(),this.Options=[{value:0,label:"dog"},{value:1,label:"cat"},{value:2,label:"rabbit"}],this.selectedOptionIndex=-1;const e=this.attachShadow({mode:"open"}),t=document.createElement("style"),n=this.getAttribute("theme");t.textContent="dark"===n?"\n        div#root {\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        }\n        div#sub {\n          z-index: 1;\n          position: absolute;\n          top: 45px;\n          width: calc(100% - 8px);\n          margin: 0px 4px;\n          border: 1px solid rgba(0, 0, 0, 0.7);\nbackground-color: #333333;\n        }\n        button#create-new {\n          text-align: start;\n          background-color: #333333;\ncolor: white;\n          border: none;\n          padding: 8px 4px;\n        }\n        button#create-new:hover {\n          background-color: #505050;\n        }\n        .d-none { display: none; }\n        .d-block { display: block;}\n        div#sub.d-flex {\n          display: flex; flex-direction: column;\n          box-shadow: 0 0 5px 5px rgba(0, 0, 0, 0.3);\n        }\n        input#search {\nbackground-color: #303030;\ntransition: border-color 0.1s;\n          margin: 4px 4px;\n          border-radius: 0px;\n          border: 2px solid #303030;\n          padding: 8px 8px;\n          outline: none;\ncolor: white;\n}    input#search:focus-visible {\nborder: 2px solid rgba(100, 170, 255, 0.7);\noutline-width: 0;\n}\ninput#search.selected {\ncolor: #FF3311;\nborder-color: #FF3311;\n}\n":"\n        div#root {\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        }\n        div#sub {\n          z-index: 1;\n          position: absolute;\n          top: 45px;\n          width: calc(100% - 8px);\n          margin: 0px 4px;\n          border: 1px solid #B0B0B0;\nbackground-color: #808080;\n        }\n        button#create-new {\n          text-align: start;\n          background-color: #FFFFFF;\ncolor: white;\n          border: none;\n          padding: 8px 4px;\n          color:black;\n        }\n        button#create-new:hover {\n          background-color: #F0F0F0;\n        }\n        .d-none { display: none; }\n        .d-block { display: block;}\n        div#sub.d-flex {\n          display: flex; flex-direction: column;\n          box-shadow: 0 0 5px 5px rgba(0, 0, 0, 0.1);\n        }\n        input#search {\nbackground-color: #FFFFFF;\ntransition: border-color 0.1s;\n          margin: 5px 5px;\n          border-radius: 0px;\n          border: 1px solid #707070;\n          padding: 8px 8px;\n          outline: none;\ncolor: black;\n}    input#search:focus-visible {\nborder: 2px solid rgba(100, 170, 255, 0.7);\nmargin: 4px;\noutline-width: 0;\n}\ninput#search.selected {\ncolor: #FF3311;\nborder-color: #FF3311;\n}\n";const o=this.getAttribute("placeholder")||"type here";e.innerHTML=`\n        <div id="root">\n          <form id="search-form" style="display: flex;">\n            <input id="search" type="text" placeholder=${o} style="width: 100%;" autocomplete="off"/>\n          </form>\n          <div id="sub" class="d-none">\n            <custom-select-view id="select-view" theme=${n}></custom-select-view>\n            <button id="create-new">Create </button>\n          </div>\n        </div>\n`,e.appendChild(t),e.getElementById("search").oninput=e=>{this.onSearchInputChange(e.target.value)},e.getElementById("search").onkeydown=e=>{"ArrowUp"===e.key?(this.selectedOptionIndex-=1,this.selectedOptionIndex<0&&(this.selectedOptionIndex=0),this.shadowRoot.getElementById("search").blur(),this.onFocus(),this.shadowRoot.getElementById("select-view").setAttribute("selectedoptionindex",this.selectedOptionIndex.toString())):"ArrowDown"===e.key?(this.selectedOptionIndex+=1,this.selectedOptionIndex>=this.options.length&&(this.selectedOptionIndex=this.options.length-1),this.shadowRoot.getElementById("search").blur(),this.onFocus(),this.shadowRoot.getElementById("select-view").setAttribute("selectedoptionindex",this.selectedOptionIndex.toString())):"Escape"===e.key&&this.onBlur()},e.getElementById("search-form").onsubmit=e=>(this.onSearchFormSubmit(),!1),e.getElementById("search-form").onfocus=()=>{this.onFocus()},e.getElementById("search").onfocus=()=>{this.onFocus()},this.Options=[{value:0,label:"dog"},{value:1,label:"cat"},{value:2,label:"rabbit"}],this.options=this.Options,this.onblur=()=>{this.onBlur()},this.onfocus=()=>{this.onFocus()},e.getElementById("select-view").addEventListener("option-select",(e=>{const t=e.detail.value;this.onOptionSelected(t)})),this.shadowRoot.getElementById("sub").className="d-none";const s=this.shadowRoot.getElementById("create-new");s.addEventListener("click",(e=>{this.onCreateNewButtonClicked()})),s.className="d-none"}static get observedAttributes(){return["theme","placeholder"]}onSearchFormSubmit(){const e=this.shadowRoot.getElementById("select-view");1===this.shadowRoot.getElementById("select-view").options.length?this.onOptionSelected(e.options[0].value):this.selectedOptionIndex>=0&&this.selectedOptionIndex<=this.Options.length?this.onOptionSelected(this.options[this.selectedOptionIndex].value):"d-block"===this.shadowRoot.getElementById("create-new").className&&this.onCreateNewButtonClicked(),this.onBlur()}onCreateNewButtonClicked(){new Array(this.Options);const e={value:this.Options.length,label:this.shadowRoot.getElementById("search").value};this.Options.push(e),this.dispatchEvent(new CustomEvent("selection-options-change",{detail:{options:this.Options}})),this.onOptionSelected(e.value)}onOptionSelected(e){let t="";for(const n of this.Options)n.value===e&&(t=n.label);this.shadowRoot.getElementById("search").value=t,this.dispatchEvent(new CustomEvent("type-select-change",{detail:{value:e}})),this.onBlur()}get currentLabel(){return this.shadowRoot.getElementById("search").value}onFocus(){this.shadowRoot.getElementById("sub").className="d-flex",this.shadowRoot.getElementById("search").focus()}onBlur(){this.shadowRoot.getElementById("search").blur(),this.shadowRoot.getElementById("sub").className="d-none"}setCreateNewButtonDisplay(e,t){const n=this.shadowRoot.getElementById("create-new");n.innerText=`Create: ${t}`,""!==t&&(e.length>1||1!==e.length||e[0].label!==t)?n.className="d-block":n.className="d-none"}onSearchInputChange(e){const t=this.Options.filter((t=>t.label.includes(e)));this.shadowRoot.getElementById("select-view").options=t,this.setCreateNewButtonDisplay(t,e)}set options(e){this.Options=e,this.shadowRoot.getElementById("select-view").options=e}get options(){return this.Options}set value(e){for(const t of this.options)t.value===e&&(this.shadowRoot.getElementById("search").value=t.label)}set selected(e){this.shadowRoot.getElementById("search").className=e?"selected":"not-selected"}}t.TypeSelectView=o},541:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TabSelection=void 0;const o=n(653);class s extends o.ComponentBase{constructor(){super(),this.currentSelectedIndex=-1,this.renderLabels()}static get observedAttributes(){return["theme","labels","optionindex"]}renderLabels(){const e=JSON.parse(this.getAttribute("labels")),t=this.shadowRoot.getElementById("root");if(t.innerText="",this.currentSelectedIndex<0){const e=parseInt(this.getAttribute("optionindex")||"0");this.currentSelectedIndex=e}let n=0;for(const o of e){const e=document.createElement("div"),s=n===this.currentSelectedIndex;e.setAttribute("class","tab-item-container "+(s?"selected":"not-selected")),e.innerHTML=`\n              <button class=${s?"selected":"not-selected"}>${o}</button>\n            `,t.appendChild(e);const i=n;e.addEventListener("click",(()=>{this.currentSelectedIndex=i,this.renderLabels(),this.dispatchEvent(new CustomEvent("option-select",{detail:{index:i,label:o}}))})),n+=1}}getStyle(){return"div#root {\ndisplay: grid;\ngap: 0px;\n      grid-auto-columns: 1fr;\n      grid-auto-flow: column;\n      border-radius: 2px;\n    }\ndiv#root.dark {\nbackground-color: #1F1F1F;\nborder: 1px solid #505050;\n}\ndiv#root.light {\nbackground-color: white;;\nborder: 1px solid #C0C0C0;\n}\n    button {\n      appearance: none;\n      margin: 0px;\n      margin-right: auto;\n      margin-left: auto;\n      border: 0px;\n      padding: 4px 8px;\n      font-size: 0.8rem;\n      font-weight: bold;\n      font-family: system-ui;\n    }\n    div.light button {\nbackground-color: transparent\n}\n    div.dark button {\nbackground-color: rgba(0, 0, 0, 0.0);\n}\n    div.dark button.selected{\n      color: rgba(0, 0, 0, 1.0);\n      //background-color: rgba(0, 0, 0, 0.07);\n    }\n    div.dark button.not-selected{\n      color: rgba(255, 255, 255, 0.8);\n      //background-color: rgba(0, 0, 0, 0);\n    }\n    div.light button.selected { color: white;}\n    div.light button.not-selected { color: #505050;}\n    div.selected, div.not-selected{\n      display: flex;\n      padding: 0px 4px;\nborder-radius: 2px;\ntransition: background-color 0.1s;\n    }\n    div.dark div.selected {\n      background-color: #AAAAAA;\n    }\n    div.dark div.not-selected {\n      background-color: rgba(0, 0, 0, 0.0);\n\n    }\n    div.dark div.not-selected:hover {\n      background-color: rgba(255, 255, 255, 0.1);\n    }\ndiv.light div.not-selected:hover {background-color: rgba(0, 0, 0, 0.05);}\n    div.light div.selected {\nbackground-color: #0077FF;\n}\ndiv.light div.not-selected {\nbackground-color: white;\n}\n\n    "}renderHTML(){return`\n        <div id="root" class=${this.getAttribute("theme")||"light"}>\n        </div>\n        `}}t.TabSelection=s,customElements.define("tab-selection",s)}},t={};!function n(o){var s=t[o];if(void 0!==s)return s.exports;var i=t[o]={exports:{}};return e[o](i,i.exports,n),i.exports}(519)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,